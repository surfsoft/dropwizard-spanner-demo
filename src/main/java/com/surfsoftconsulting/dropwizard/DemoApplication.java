/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.surfsoftconsulting.dropwizard;

import com.surfsoftconsulting.dropwizard.repository.Person;
import com.surfsoftconsulting.dropwizard.repository.PersonDAO;
import com.surfsoftconsulting.dropwizard.resource.PersonResource;
import io.dropwizard.Application;
import io.dropwizard.configuration.EnvironmentVariableSubstitutor;
import io.dropwizard.configuration.SubstitutingSourceProvider;
import io.dropwizard.db.DataSourceFactory;
import io.dropwizard.hibernate.HibernateBundle;
import io.dropwizard.setup.Bootstrap;
import io.dropwizard.setup.Environment;

public class DemoApplication extends Application<DemoConfiguration> {

    public static void main(String[] args) throws Exception {
        new DemoApplication().run(args);
    }

    private final HibernateBundle<DemoConfiguration> hibernateBundle =
            new HibernateBundle<>(Person.class) {
                @Override
                public DataSourceFactory getDataSourceFactory(DemoConfiguration configuration) {
                    return configuration.getDataSourceFactory();
                }
            };

    @Override
    public String getName() {
        return "dropwizard-spanner-demo";
    }

    @Override
    public void initialize(Bootstrap<DemoConfiguration> bootstrap) {
        // Enable variable substitution with environment variables
        bootstrap.setConfigurationSourceProvider(
                new SubstitutingSourceProvider(
                        bootstrap.getConfigurationSourceProvider(),
                        new EnvironmentVariableSubstitutor(false)
                )
        );

//        bootstrap.addBundle(new MigrationsBundle<DemoConfiguration>() {
//            @Override
//            public DataSourceFactory getDataSourceFactory(DemoConfiguration configuration) {
//                return configuration.getDataSourceFactory();
//            }
//        });
        bootstrap.addBundle(hibernateBundle);
    }

    @Override
    public void run(DemoConfiguration configuration, Environment environment) {

        final PersonDAO dao = new PersonDAO(hibernateBundle.getSessionFactory());
        environment.jersey().register(new PersonResource(dao));

    }
}
